// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace iYao.iYaoWebService {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UserRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLatitudeAndLongitudeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRecruitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecruitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyRecruitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrUpdateUsers_relOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyUsers_relOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelUsers_relOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsers_relOperationCompleted;
        
        public WebService1() {
            this.Url = "http://192.168.199.163:3364/WebService1.asmx";
        }
        
        public WebService1(string url) {
            this.Url = url;
        }
        
        public event UserRegCompletedEventHandler UserRegCompleted;
        
        public event GetUserInfoByIDCompletedEventHandler GetUserInfoByIDCompleted;
        
        public event UpdateUserInfoCompletedEventHandler UpdateUserInfoCompleted;
        
        public event UpdateLatitudeAndLongitudeCompletedEventHandler UpdateLatitudeAndLongitudeCompleted;
        
        public event GetAllRecruitsCompletedEventHandler GetAllRecruitsCompleted;
        
        public event AddRecruitCompletedEventHandler AddRecruitCompleted;
        
        public event GetMyRecruitsCompletedEventHandler GetMyRecruitsCompleted;
        
        public event AddOrUpdateUsers_relCompletedEventHandler AddOrUpdateUsers_relCompleted;
        
        public event GetMyUsers_relCompletedEventHandler GetMyUsers_relCompleted;
        
        public event DelUsers_relCompletedEventHandler DelUsers_relCompleted;
        
        public event GetUsers_relCompletedEventHandler GetUsers_relCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserReg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public bool UserReg(Users u) {
            object[] results = this.Invoke("UserReg", new object[] {
                        u});
            return ((bool)(results[0]));
        }
        
        public System.IAsyncResult BeginUserReg(Users u, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UserReg", new object[] {
                        u}, callback, asyncState);
        }
        
        public bool EndUserReg(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        public void UserRegAsync(Users u) {
            this.UserRegAsync(u, null);
        }
        
        public void UserRegAsync(Users u, object userState) {
            if ((this.UserRegOperationCompleted == null)) {
                this.UserRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserRegCompleted);
            }
            this.InvokeAsync("UserReg", new object[] {
                        u}, this.UserRegOperationCompleted, userState);
        }
        
        private void OnUserRegCompleted(object arg) {
            if ((this.UserRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserRegCompleted(this, new UserRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInfoByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Users GetUserInfoByID(string userID) {
            object[] results = this.Invoke("GetUserInfoByID", new object[] {
                        userID});
            return ((Users)(results[0]));
        }
        
        public System.IAsyncResult BeginGetUserInfoByID(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserInfoByID", new object[] {
                        userID}, callback, asyncState);
        }
        
        public Users EndGetUserInfoByID(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Users)(results[0]));
        }
        
        public void GetUserInfoByIDAsync(string userID) {
            this.GetUserInfoByIDAsync(userID, null);
        }
        
        public void GetUserInfoByIDAsync(string userID, object userState) {
            if ((this.GetUserInfoByIDOperationCompleted == null)) {
                this.GetUserInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByIDCompleted);
            }
            this.InvokeAsync("GetUserInfoByID", new object[] {
                        userID}, this.GetUserInfoByIDOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByIDCompleted(object arg) {
            if ((this.GetUserInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByIDCompleted(this, new GetUserInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int UpdateUserInfo(Users u) {
            object[] results = this.Invoke("UpdateUserInfo", new object[] {
                        u});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BeginUpdateUserInfo(Users u, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateUserInfo", new object[] {
                        u}, callback, asyncState);
        }
        
        public int EndUpdateUserInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void UpdateUserInfoAsync(Users u) {
            this.UpdateUserInfoAsync(u, null);
        }
        
        public void UpdateUserInfoAsync(Users u, object userState) {
            if ((this.UpdateUserInfoOperationCompleted == null)) {
                this.UpdateUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoCompleted);
            }
            this.InvokeAsync("UpdateUserInfo", new object[] {
                        u}, this.UpdateUserInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoCompleted(object arg) {
            if ((this.UpdateUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoCompleted(this, new UpdateUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLatitudeAndLongitude", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int UpdateLatitudeAndLongitude(double latitude, double longitude, string userID) {
            object[] results = this.Invoke("UpdateLatitudeAndLongitude", new object[] {
                        latitude,
                        longitude,
                        userID});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BeginUpdateLatitudeAndLongitude(double latitude, double longitude, string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLatitudeAndLongitude", new object[] {
                        latitude,
                        longitude,
                        userID}, callback, asyncState);
        }
        
        public int EndUpdateLatitudeAndLongitude(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void UpdateLatitudeAndLongitudeAsync(double latitude, double longitude, string userID) {
            this.UpdateLatitudeAndLongitudeAsync(latitude, longitude, userID, null);
        }
        
        public void UpdateLatitudeAndLongitudeAsync(double latitude, double longitude, string userID, object userState) {
            if ((this.UpdateLatitudeAndLongitudeOperationCompleted == null)) {
                this.UpdateLatitudeAndLongitudeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLatitudeAndLongitudeCompleted);
            }
            this.InvokeAsync("UpdateLatitudeAndLongitude", new object[] {
                        latitude,
                        longitude,
                        userID}, this.UpdateLatitudeAndLongitudeOperationCompleted, userState);
        }
        
        private void OnUpdateLatitudeAndLongitudeCompleted(object arg) {
            if ((this.UpdateLatitudeAndLongitudeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLatitudeAndLongitudeCompleted(this, new UpdateLatitudeAndLongitudeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRecruits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Recruit[] GetAllRecruits() {
            object[] results = this.Invoke("GetAllRecruits", new object[0]);
            return ((Recruit[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetAllRecruits(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllRecruits", new object[0], callback, asyncState);
        }
        
        public Recruit[] EndGetAllRecruits(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Recruit[])(results[0]));
        }
        
        public void GetAllRecruitsAsync() {
            this.GetAllRecruitsAsync(null);
        }
        
        public void GetAllRecruitsAsync(object userState) {
            if ((this.GetAllRecruitsOperationCompleted == null)) {
                this.GetAllRecruitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRecruitsCompleted);
            }
            this.InvokeAsync("GetAllRecruits", new object[0], this.GetAllRecruitsOperationCompleted, userState);
        }
        
        private void OnGetAllRecruitsCompleted(object arg) {
            if ((this.GetAllRecruitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRecruitsCompleted(this, new GetAllRecruitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddRecruit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int AddRecruit(Recruit r) {
            object[] results = this.Invoke("AddRecruit", new object[] {
                        r});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BeginAddRecruit(Recruit r, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddRecruit", new object[] {
                        r}, callback, asyncState);
        }
        
        public int EndAddRecruit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void AddRecruitAsync(Recruit r) {
            this.AddRecruitAsync(r, null);
        }
        
        public void AddRecruitAsync(Recruit r, object userState) {
            if ((this.AddRecruitOperationCompleted == null)) {
                this.AddRecruitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecruitCompleted);
            }
            this.InvokeAsync("AddRecruit", new object[] {
                        r}, this.AddRecruitOperationCompleted, userState);
        }
        
        private void OnAddRecruitCompleted(object arg) {
            if ((this.AddRecruitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecruitCompleted(this, new AddRecruitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyRecruits", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Recruit[] GetMyRecruits(Users u) {
            object[] results = this.Invoke("GetMyRecruits", new object[] {
                        u});
            return ((Recruit[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetMyRecruits(Users u, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMyRecruits", new object[] {
                        u}, callback, asyncState);
        }
        
        public Recruit[] EndGetMyRecruits(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Recruit[])(results[0]));
        }
        
        public void GetMyRecruitsAsync(Users u) {
            this.GetMyRecruitsAsync(u, null);
        }
        
        public void GetMyRecruitsAsync(Users u, object userState) {
            if ((this.GetMyRecruitsOperationCompleted == null)) {
                this.GetMyRecruitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyRecruitsCompleted);
            }
            this.InvokeAsync("GetMyRecruits", new object[] {
                        u}, this.GetMyRecruitsOperationCompleted, userState);
        }
        
        private void OnGetMyRecruitsCompleted(object arg) {
            if ((this.GetMyRecruitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyRecruitsCompleted(this, new GetMyRecruitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrUpdateUsers_rel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int AddOrUpdateUsers_rel(string userID, string friendID, RelationType rel) {
            object[] results = this.Invoke("AddOrUpdateUsers_rel", new object[] {
                        userID,
                        friendID,
                        rel});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BeginAddOrUpdateUsers_rel(string userID, string friendID, RelationType rel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddOrUpdateUsers_rel", new object[] {
                        userID,
                        friendID,
                        rel}, callback, asyncState);
        }
        
        public int EndAddOrUpdateUsers_rel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void AddOrUpdateUsers_relAsync(string userID, string friendID, RelationType rel) {
            this.AddOrUpdateUsers_relAsync(userID, friendID, rel, null);
        }
        
        public void AddOrUpdateUsers_relAsync(string userID, string friendID, RelationType rel, object userState) {
            if ((this.AddOrUpdateUsers_relOperationCompleted == null)) {
                this.AddOrUpdateUsers_relOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrUpdateUsers_relCompleted);
            }
            this.InvokeAsync("AddOrUpdateUsers_rel", new object[] {
                        userID,
                        friendID,
                        rel}, this.AddOrUpdateUsers_relOperationCompleted, userState);
        }
        
        private void OnAddOrUpdateUsers_relCompleted(object arg) {
            if ((this.AddOrUpdateUsers_relCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrUpdateUsers_relCompleted(this, new AddOrUpdateUsers_relCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyUsers_rel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Users[] GetMyUsers_rel(string userID) {
            object[] results = this.Invoke("GetMyUsers_rel", new object[] {
                        userID});
            return ((Users[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetMyUsers_rel(string userID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMyUsers_rel", new object[] {
                        userID}, callback, asyncState);
        }
        
        public Users[] EndGetMyUsers_rel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Users[])(results[0]));
        }
        
        public void GetMyUsers_relAsync(string userID) {
            this.GetMyUsers_relAsync(userID, null);
        }
        
        public void GetMyUsers_relAsync(string userID, object userState) {
            if ((this.GetMyUsers_relOperationCompleted == null)) {
                this.GetMyUsers_relOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyUsers_relCompleted);
            }
            this.InvokeAsync("GetMyUsers_rel", new object[] {
                        userID}, this.GetMyUsers_relOperationCompleted, userState);
        }
        
        private void OnGetMyUsers_relCompleted(object arg) {
            if ((this.GetMyUsers_relCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyUsers_relCompleted(this, new GetMyUsers_relCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelUsers_rel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int DelUsers_rel(string userID, string friendID) {
            object[] results = this.Invoke("DelUsers_rel", new object[] {
                        userID,
                        friendID});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BeginDelUsers_rel(string userID, string friendID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DelUsers_rel", new object[] {
                        userID,
                        friendID}, callback, asyncState);
        }
        
        public int EndDelUsers_rel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void DelUsers_relAsync(string userID, string friendID) {
            this.DelUsers_relAsync(userID, friendID, null);
        }
        
        public void DelUsers_relAsync(string userID, string friendID, object userState) {
            if ((this.DelUsers_relOperationCompleted == null)) {
                this.DelUsers_relOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelUsers_relCompleted);
            }
            this.InvokeAsync("DelUsers_rel", new object[] {
                        userID,
                        friendID}, this.DelUsers_relOperationCompleted, userState);
        }
        
        private void OnDelUsers_relCompleted(object arg) {
            if ((this.DelUsers_relCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelUsers_relCompleted(this, new DelUsers_relCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsers_rel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public RelationType GetUsers_rel(string userID, string friendID) {
            object[] results = this.Invoke("GetUsers_rel", new object[] {
                        userID,
                        friendID});
            return ((RelationType)(results[0]));
        }
        
        public System.IAsyncResult BeginGetUsers_rel(string userID, string friendID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUsers_rel", new object[] {
                        userID,
                        friendID}, callback, asyncState);
        }
        
        public RelationType EndGetUsers_rel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((RelationType)(results[0]));
        }
        
        public void GetUsers_relAsync(string userID, string friendID) {
            this.GetUsers_relAsync(userID, friendID, null);
        }
        
        public void GetUsers_relAsync(string userID, string friendID, object userState) {
            if ((this.GetUsers_relOperationCompleted == null)) {
                this.GetUsers_relOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsers_relCompleted);
            }
            this.InvokeAsync("GetUsers_rel", new object[] {
                        userID,
                        friendID}, this.GetUsers_relOperationCompleted, userState);
        }
        
        private void OnGetUsers_relCompleted(object arg) {
            if ((this.GetUsers_relCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsers_relCompleted(this, new GetUsers_relCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Users {
        
        /// <remarks/>
        public long id;
        
        /// <remarks/>
        public string idstr;
        
        /// <remarks/>
        public string screen_name;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string profile_image_url;
        
        /// <remarks/>
        public string gender;
        
        /// <remarks/>
        public bool verified;
        
        /// <remarks/>
        public string verified_reason;
        
        /// <remarks/>
        public string nickName;
        
        /// <remarks/>
        public string location;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string school;
        
        /// <remarks/>
        public string age;
        
        /// <remarks/>
        public string sign;
        
        /// <remarks/>
        public string ImageList;
        
        /// <remarks/>
        public System.DateTime LastLoginTime;
        
        /// <remarks/>
        public double Latitude;
        
        /// <remarks/>
        public double Longitude;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Recruit {
        
        /// <remarks/>
        public int rid;
        
        /// <remarks/>
        public System.DateTime PublishTime;
        
        /// <remarks/>
        public int EffectiveTime;
        
        /// <remarks/>
        public Users PublishUser;
        
        /// <remarks/>
        public double Latitude;
        
        /// <remarks/>
        public double Longitude;
        
        /// <remarks/>
        public RecruitTarget Target;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public Users[] EnlistUser;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RecruitTarget {
        
        /// <remarks/>
        public string RecruitTargetDisplayName;
        
        /// <remarks/>
        public string RecruitTargetID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum RelationType {
        
        /// <remarks/>
        stranger,
        
        /// <remarks/>
        friends,
        
        /// <remarks/>
        blacklist,
    }
    
    public partial class UserRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public delegate void UserRegCompletedEventHandler(object sender, UserRegCompletedEventArgs args);
    
    public partial class GetUserInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Users Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users)(this.results[0]));
            }
        }
    }
    
    public delegate void GetUserInfoByIDCompletedEventHandler(object sender, GetUserInfoByIDCompletedEventArgs args);
    
    public partial class UpdateUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void UpdateUserInfoCompletedEventHandler(object sender, UpdateUserInfoCompletedEventArgs args);
    
    public partial class UpdateLatitudeAndLongitudeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLatitudeAndLongitudeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void UpdateLatitudeAndLongitudeCompletedEventHandler(object sender, UpdateLatitudeAndLongitudeCompletedEventArgs args);
    
    public partial class GetAllRecruitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRecruitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Recruit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recruit[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetAllRecruitsCompletedEventHandler(object sender, GetAllRecruitsCompletedEventArgs args);
    
    public partial class AddRecruitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecruitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void AddRecruitCompletedEventHandler(object sender, AddRecruitCompletedEventArgs args);
    
    public partial class GetMyRecruitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyRecruitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Recruit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recruit[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetMyRecruitsCompletedEventHandler(object sender, GetMyRecruitsCompletedEventArgs args);
    
    public partial class AddOrUpdateUsers_relCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrUpdateUsers_relCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void AddOrUpdateUsers_relCompletedEventHandler(object sender, AddOrUpdateUsers_relCompletedEventArgs args);
    
    public partial class GetMyUsers_relCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyUsers_relCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Users[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetMyUsers_relCompletedEventHandler(object sender, GetMyUsers_relCompletedEventArgs args);
    
    public partial class DelUsers_relCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelUsers_relCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void DelUsers_relCompletedEventHandler(object sender, DelUsers_relCompletedEventArgs args);
    
    public partial class GetUsers_relCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsers_relCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RelationType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RelationType)(this.results[0]));
            }
        }
    }
    
    public delegate void GetUsers_relCompletedEventHandler(object sender, GetUsers_relCompletedEventArgs args);
}
